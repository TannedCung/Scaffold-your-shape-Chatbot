name: 📚 Documentation Preview

on:
  pull_request:
    branches: [ main ]
    paths:
      - 'sphinx_docs/**'
      - 'agents/**'
      - 'core/**'
      - 'models/**'
      - 'services/**'
      - 'tools/**'
      - 'config/**'
      - 'requirements.txt'
      - '.github/workflows/docs-preview.yml'

permissions:
  contents: write
  pull-requests: write
  pages: write
  id-token: write

jobs:
  build-docs:
    runs-on: ubuntu-latest
    
    steps:
    - name: 🔄 Checkout code
      uses: actions/checkout@v4
      
    - name: 🐍 Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
        cache: 'pip'
        
    - name: 📦 Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        
    - name: 🏗️ Build documentation
      run: |
        cd sphinx_docs
        sphinx-build -b html . _build/html --keep-going
        
    - name: 📋 Create build summary
      run: |
        echo "## 📚 Documentation Build Summary" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "✅ Documentation built successfully!" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### 📊 Build Statistics" >> $GITHUB_STEP_SUMMARY
        echo "- **Pages built**: $(find sphinx_docs/_build/html -name "*.html" | wc -l)" >> $GITHUB_STEP_SUMMARY
        echo "- **Build time**: $(date)" >> $GITHUB_STEP_SUMMARY
        echo "- **Python version**: $(python --version)" >> $GITHUB_STEP_SUMMARY
        echo "- **Sphinx version**: $(sphinx-build --version)" >> $GITHUB_STEP_SUMMARY
        
    - name: 📤 Upload documentation artifact
      uses: actions/upload-artifact@v4
      with:
        name: documentation-${{ github.event.pull_request.number }}
        path: sphinx_docs/_build/html/
        retention-days: 30
        
    - name: 🌐 Deploy to GitHub Pages (Preview)
      if: github.event_name == 'pull_request'
      uses: peaceiris/actions-gh-pages@v3
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: sphinx_docs/_build/html
        destination_dir: pr-${{ github.event.pull_request.number }}
        keep_files: true
        
    - name: 💬 Comment on PR with preview link
      if: github.event_name == 'pull_request'
      uses: actions/github-script@v7
      with:
        script: |
          const prNumber = context.payload.pull_request.number;
          const repoOwner = context.repo.owner;
          const repoName = context.repo.repo;
          
          const previewUrl = `https://${repoOwner}.github.io/${repoName}/pr-${prNumber}/`;
          
          const comment = `## 📚 Documentation Preview
          
          Your documentation changes are ready for review!
          
          🔗 **Preview URL**: ${previewUrl}
          
          ### 📋 What's included:
          - ✅ Updated documentation pages
          - ✅ Auto-generated API documentation
          - ✅ All examples and guides
          
          ### 🔍 Review checklist:
          - [ ] Check that all links work correctly
          - [ ] Verify code examples render properly  
          - [ ] Ensure new content is well-structured
          - [ ] Test responsive design on mobile
          
          ---
          
          💡 **Tip**: This preview will be updated automatically when you push new commits to this PR.
          
          🤖 *Generated by GitHub Actions*`;
          
          // First, try to find existing comment
          const { data: comments } = await github.rest.issues.listComments({
            owner: context.repo.owner,
            repo: context.repo.repo,
            issue_number: prNumber
          });
          
          const existingComment = comments.find(comment => 
            comment.body.includes('📚 Documentation Preview')
          );
          
          if (existingComment) {
            // Update existing comment
            await github.rest.issues.updateComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              comment_id: existingComment.id,
              body: comment
            });
          } else {
            // Create new comment
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: prNumber,
              body: comment
            });
          }

  cleanup-old-previews:
    runs-on: ubuntu-latest
    if: github.event.action == 'closed'
    
    steps:
    - name: 🔄 Checkout gh-pages
      uses: actions/checkout@v4
      with:
        ref: gh-pages
        token: ${{ secrets.GITHUB_TOKEN }}
        
    - name: 🧹 Clean up preview directory
      run: |
        if [ -d "pr-${{ github.event.pull_request.number }}" ]; then
          rm -rf "pr-${{ github.event.pull_request.number }}"
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add .
          git commit -m "Clean up documentation preview for PR #${{ github.event.pull_request.number }}" || exit 0
          git push
        fi 